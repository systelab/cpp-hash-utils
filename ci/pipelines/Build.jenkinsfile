def channel = 'testing'
def version = '0.0.0'
def profile = 'vs2022.conanprofile'
def archs = ['x86', 'x86_64']
def configs = ['Debug', 'Release']

library identifier: 'cpp-jenkins-pipelines@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/systelab/cpp-jenkins-pipelines.git'])
   
pipeline
{
	agent
	{
		label 'lib-build'
	}

	parameters
	{
		string(	name: 'version',
				description: 'Version to build (must match the name of the tag that will be checked out), leave as 0.0.0 for checkout of current branch',
				defaultValue: '0.0.0' )

		booleanParam( name: 'stable',
					  description: 'Show if generated library should be uploaded as stable or testing',
					  defaultValue: false )
		
		booleanParam( name: 'uploadPackage',
					  description: 'Whether or not to upload testing conan package',
					  defaultValue: false )
	}

	options
	{
		skipDefaultCheckout(true)
		disableConcurrentBuilds()
		buildDiscarder(logRotator(numToKeepStr: '5'))
	}

	stages
	{
		stage('Checkout')
		{
			steps
			{
				deleteDir()
				script 
				{
					if (params.version == '0.0.0')
					{
						checkoutSourceCode()
					}
					else
					{
						checkoutSourceCodeFromTag(version)
						version = params.version
					}
					channel = params.stable ? 'stable' : 'testing'
				}
			}
		}
		
		stage('Build')
		{	
			steps
			{
				script
				{
					archs.each
					{ arch ->
						configs.each
						{ config ->
							stage("Build ${config}|${arch}")
							{
								def buildFolder = "build-HashUtils-${config}-${arch}"
								bat "conan install . --install-folder ${buildFolder} --profile=${profile} -s build_type=${config} -s arch=${arch}"
								bat "conan build . --build-folder ${buildFolder}"
								bat "conan export-pkg . HashUtils/${version}@systelab/${channel} --build-folder ${buildFolder} --force"
								dir("${buildFolder}/bin/${config}")
								{
									bat "HashUtilsTest.exe --gtest_output=xml:${env.WORKSPACE}/${buildFolder}/test_reports/HashUtilsTest.xml"
								}
								
								def buildFolderTestUtilities = "build-HashUtilsTestUtilities-${config}-${arch}"
								bat "conan install ./test/HashUtilsTestUtilities ${version}@systelab/${channel} --install-folder ${buildFolderTestUtilities} --profile=${profile} -s build_type=${config} -s arch=${arch}"
								bat "conan build ./test/HashUtilsTestUtilities --build-folder ${buildFolderTestUtilities}"
								bat "conan export-pkg ./test/HashUtilsTestUtilities HashUtilsTestUtilities/${version}@systelab/${channel} --build-folder ${buildFolderTestUtilities} --force"
							}
						}
					}
				}
			}
		}

		stage('Deploy')
		{
			when
			{
				expression { params.uploadPackage }
			}
			steps
			{
				bat "conan upload HashUtils/${version}@systelab/${channel} --all -r systelab-conan-local --force"
				bat "conan upload HashUtilsTestUtilities/${version}@systelab/${channel} --all -r systelab-conan-local --force"
			}
		}	
	}
	
	post
	{
		always
		{
			junit allowEmptyResults: true, testResults: 'build*/test_reports/*.xml'
			script
			{
				currentBuild.description = "${version}/${channel}"
			}
		}
	}
}